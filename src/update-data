#!/usr/bin/env sh

DATASET=$1

export PYTHONPATH=${PYTHONPATH}:/srv/map-portal/usr/lib/python2.6/site-packages/
#export PYTHONPATH=${PYTHONPATH}:/srv/gsmith/usr/lib/python2.6/site-packages/


# configuration

case $DATASET in

    ww3)
        SERVER=http://opendap.bom.gov.au:8080/
        SERVER_PATH=thredds/fileServer/nmoc/ww3_global_fc/
        DATA_SUBDIR=forecast
        ;;
    oceanmaps)
        SERVER=http://opendap.bom.gov.au:8080/
        SERVER_PATH=thredds/fileServer/nmoc/oceanmaps_ofam_fc/ops/latest/
        DATA_SUBDIR=data
	;;
    chloro_m)
        SERVER=http://opendap.jpl.nasa.gov/
        SERVER_PATH=/opendap/allData/modis/L3/aqua/chlA/4km/monthly/
        DATA_SUBDIR=monthly
        ;;
    chloro_d)
        SERVER=http://opendap.jpl.nasa.gov/
        SERVER_PATH=/opendap/allData/modis/L3/aqua/chlA/4km/daily/
        DATA_SUBDIR=daily
        ;;
    currents)
        SERVER=http://tds.hycom.org/
        SERVER_PATH=/thredds/dodsC/GLBu0.08/expt_91.1/forecasts
        DATA_SUBDIR=data
        ;;
    coral)
        SERVER=ftp://ftp.star.nesdis.noaa.gov
        SERVER_PATH=/pub/sod/mecb/gliu/crw_5km_for_bom
        DATA_SUBDIR=daily
        MIRROR_FLAGS='-I baa_max*.nc'
        ;;
    coral_ol)
        SERVER=ftp://ftp.star.nesdis.noaa.gov
        SERVER_PATH=/pub/sod/mecb/gliu/outlook_for_bom_v3
        DATA_SUBDIR=outlook
        MIRROR_FLAGS='-I outlook*.dat'
        ;;
    poama)
        SERVER=http://opendap.bom.gov.au:8080
        SERVER_PATH1=thredds/fileServer/paccsap/sea_surface_temperature_seasonal/grid/
	SERVER_PATH2=thredds/fileServer/paccsap/sea_level_seasonal/grid/
        DATA_SUBDIR=data
        ;;
    ersst)
        SERVER=ftp.ncdc.noaa.gov
        SERVER_PATH=/pub/data/cmb/ersst/v3b/netcdf/
        DATA_SUBDIR=monthly
        ;;
    reynolds)
        SERVER=eclipse.ncdc.noaa.gov
        SERVER_PATH=/pub/oisst/NetCDF/
        DATA_SUBDIR=daily-new
        MIRROR_FLAGS='-I *.nc.gz'
        ;;
    sealevel)
        BASE_URL=http://www.bom.gov.au/ntc
        DATA_SUBDIR=gauges-new
        ;;
    *)
        echo "Unknown dataset $DATASET" >&2
        exit 1
        ;;
esac

# load variables from ocean.config

DATA_DIR=`python << EOF
from ocean.config import get_server_config

config = get_server_config()
print config['dataDir']["$DATASET"]
EOF`

if [ "x$DATA_DIR" = "x" ]; then
    echo "DATA_DIR empty, very bad! Is PYTHONPATH set?" >&2
    exit 1
fi

# download data

cd $DATA_DIR/$DATA_SUBDIR || exit 1

case $DATASET in
    reynolds|ersst|coral|coral_ol|chloro_d|chloro_m)
        lftp $SERVER << EOF
cd $SERVER_PATH || exit 1
mirror --only-missing -n $MIRROR_FLAGS
chmod -R 666
EOF
    ;;
    poama)
            FILE=PACCSAP_oa_latest.nc
            URL=$SERVER/$SERVER_PATH1/$FILE
            wget -O $FILE "$URL" || echo -n "error ($?)"
            echo
            FILE=sla_grid_latest.nc
            URL=$SERVER/$SERVER_PATH2/$FILE
            wget -O $FILE "$URL" || echo -n "error ($?)"
            echo
    ;;
    ww3)
	    wget --no-clobber -i ./AUSWAVE_File_List.txt
    ;;
    sealevel)
        python << EOF | while read PRODUCT GAUGE
from ocean.config.tidalGaugeConfig import tidalGauge

for gauge in tidalGauge:
    product = gauge.split('_')[0]
    print product, gauge

EOF
        do
            echo -n "$GAUGE: "
            FILE=${GAUGE}SLD.txt
            URL=$BASE_URL/$PRODUCT/$FILE
            echo -n "$URL "
            wget -qO $FILE $URL || echo -n "error ($?)"
            echo
        done
    ;;

esac

# processing

case $DATASET in
    reynolds)
        python << EOF
# recompress daily data
from ocean.processing.uncompress_synched_data import uncompress_synched_data

uncompress_synched_data().process("$DATASET")
print "Calculate Monthly Averages..."

# calculate monthly averages
from ocean.processing.Calculate_Monthly_Averages import Calculate_Monthly_Averages

Calculate_Monthly_Averages().process("$DATASET")

EOF

    ;& # continue

    ersst)
        python << EOF
# apply a patch to ERSST files
from ocean.processing.convert_ERSST_files import convert
convert()

# calculate multi month averages
from ocean.processing.Calculate_MultiMonth_Averages import Calculate_MultiMonth_Averages

Calculate_MultiMonth_Averages().process("$DATASET")

# FIXME: calculate deciles
EOF
    ;;

    coral_ol)
        python << EOF
print "Convert CRW Outlook V3 to NETCDF..."

from ocean.processing.Convert_Coral_Outlook import Convert_Outlook

Convert_Outlook("$DATA_DIR","$DATA_SUBDIR")

EOF
    ;;

    currents)
        python << EOF
print "Download and Convert HYCOM Currents..."

from ocean.processing.Download_Compile_HYCOM_Currents import Download_Compile_HYCOM_Currents

Download_Compile_HYCOM_Currents("$DATA_DIR","$DATA_SUBDIR","$SERVER","$SERVER_PATH")

EOF
    ;;
esac
