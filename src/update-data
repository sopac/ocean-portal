#!/usr/bin/env sh

DATASET=$1

export PYTHONPATH=${PYTHONPATH}:/srv/map-portal/usr/lib/python2.6/site-packages/
# configuration

case $DATASET in
    ersst)
        SERVER=ftp.ncdc.noaa.gov
        SERVER_PATH=/pub/data/cmb/ersst/v3b/netcdf/
        DATA_SUBDIR=monthly
        ;;

    reynolds)
        SERVER=eclipse.ncdc.noaa.gov
        SERVER_PATH=/pub/oisst/NetCDF/
        DATA_SUBDIR=daily-new
        MIRROR_FLAGS='-I *.nc.gz'
        ;;

    sealevel)
        BASE_URL=http://www.bom.gov.au/ntc
        DATA_SUBDIR=gauges-new
        ;;

    *)
        echo "Unknown dataset $DATASET" >&2
        exit 1
        ;;
esac

# load variables from ocean.config

DATA_DIR=`python << EOF
from ocean.config import get_server_config

config = get_server_config()
print config['dataDir']["$DATASET"]
EOF`

if [ "x$DATA_DIR" = "x" ]; then
    echo "DATA_DIR empty, very bad! Is PYTHONPATH set?" >&2
    exit 1
fi

# download data

cd $DATA_DIR/$DATA_SUBDIR || exit 1

case $DATASET in
    reynolds|ersst)

        lftp $SERVER << EOF
cd $SERVER_PATH || exit 1
mirror -ve $MIRROR_FLAGS
EOF
    ;;

    sealevel)
        python << EOF | while read PRODUCT GAUGE
from ocean.config.tidalGaugeConfig import tidalGauge

for gauge in tidalGauge:
    product = gauge.split('_')[0]
    print product, gauge
EOF
        do
            echo -n "$GAUGE: "
            FILE=${GAUGE}SLD.txt
            URL=$BASE_URL/$PRODUCT/$FILE
            echo -n "$URL "
            wget -qO $FILE $URL || echo -n "error ($?)"
            echo
        done
    ;;

esac

# processing

case $DATASET in
    reynolds)
        python << EOF
# recompress daily data
from ocean.processing.uncompress_synched_data import uncompress_synched_data

uncompress_synched_data().process("$DATASET")

# calculate monthly averages
from ocean.processing.Calculate_Monthly_Averages import Calculate_Monthly_Averages

Calculate_Monthly_Averages().process("$DATASET")
EOF

    ;& # continue

    ersst)
        python << EOF
# apply a patch to ERSST files
from ocean.processing.convert_ERSST_files import convert
convert()

# calculate multi month averages
from ocean.processing.Calculate_MultiMonth_Averages import Calculate_MultiMonth_Averages

Calculate_MultiMonth_Averages().process("$DATASET")

# FIXME: calculate deciles
EOF
    ;;
esac
